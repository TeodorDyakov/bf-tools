.section .data
arr:
.zero 65536
.section .text
.globl _start
_start:
mov $0, %rdi
incb arr(,%rdi,1)
incb arr(,%rdi,1)
incb arr(,%rdi,1)
incb arr(,%rdi,1)
incb arr(,%rdi,1)
incb arr(,%rdi,1)
incb arr(,%rdi,1)
incb arr(,%rdi,1)
cmpb $0, arr(,%rdi,1)
je R0
L0:
inc %rdi
incb arr(,%rdi,1)
incb arr(,%rdi,1)
incb arr(,%rdi,1)
incb arr(,%rdi,1)
cmpb $0, arr(,%rdi,1)
je R1
L1:
inc %rdi
incb arr(,%rdi,1)
incb arr(,%rdi,1)
inc %rdi
incb arr(,%rdi,1)
incb arr(,%rdi,1)
incb arr(,%rdi,1)
inc %rdi
incb arr(,%rdi,1)
incb arr(,%rdi,1)
incb arr(,%rdi,1)
inc %rdi
incb arr(,%rdi,1)
dec %rdi
dec %rdi
dec %rdi
dec %rdi
decb arr(,%rdi,1)
cmpb $0, arr(,%rdi,1)
jne L1
R1:
inc %rdi
incb arr(,%rdi,1)
inc %rdi
incb arr(,%rdi,1)
inc %rdi
decb arr(,%rdi,1)
inc %rdi
inc %rdi
incb arr(,%rdi,1)
cmpb $0, arr(,%rdi,1)
je R2
L2:
dec %rdi
cmpb $0, arr(,%rdi,1)
jne L2
R2:
dec %rdi
decb arr(,%rdi,1)
cmpb $0, arr(,%rdi,1)
jne L0
R0:
inc %rdi
inc %rdi
mov %rdi, %rdx
add $arr, %rdx
mov $1, %rax
mov %rdi, %r9
mov $1, %rdi
mov %rdx, %rsi
mov $1, %rdx
syscall
mov     %r9, %rdi
inc %rdi
decb arr(,%rdi,1)
decb arr(,%rdi,1)
decb arr(,%rdi,1)
mov %rdi, %rdx
add $arr, %rdx
mov $1, %rax
mov %rdi, %r9
mov $1, %rdi
mov %rdx, %rsi
mov $1, %rdx
syscall
mov     %r9, %rdi
incb arr(,%rdi,1)
incb arr(,%rdi,1)
incb arr(,%rdi,1)
incb arr(,%rdi,1)
incb arr(,%rdi,1)
incb arr(,%rdi,1)
incb arr(,%rdi,1)
mov %rdi, %rdx
add $arr, %rdx
mov $1, %rax
mov %rdi, %r9
mov $1, %rdi
mov %rdx, %rsi
mov $1, %rdx
syscall
mov     %r9, %rdi
mov %rdi, %rdx
add $arr, %rdx
mov $1, %rax
mov %rdi, %r9
mov $1, %rdi
mov %rdx, %rsi
mov $1, %rdx
syscall
mov     %r9, %rdi
incb arr(,%rdi,1)
incb arr(,%rdi,1)
incb arr(,%rdi,1)
mov %rdi, %rdx
add $arr, %rdx
mov $1, %rax
mov %rdi, %r9
mov $1, %rdi
mov %rdx, %rsi
mov $1, %rdx
syscall
mov     %r9, %rdi
inc %rdi
inc %rdi
mov %rdi, %rdx
add $arr, %rdx
mov $1, %rax
mov %rdi, %r9
mov $1, %rdi
mov %rdx, %rsi
mov $1, %rdx
syscall
mov     %r9, %rdi
dec %rdi
decb arr(,%rdi,1)
mov %rdi, %rdx
add $arr, %rdx
mov $1, %rax
mov %rdi, %r9
mov $1, %rdi
mov %rdx, %rsi
mov $1, %rdx
syscall
mov     %r9, %rdi
dec %rdi
mov %rdi, %rdx
add $arr, %rdx
mov $1, %rax
mov %rdi, %r9
mov $1, %rdi
mov %rdx, %rsi
mov $1, %rdx
syscall
mov     %r9, %rdi
incb arr(,%rdi,1)
incb arr(,%rdi,1)
incb arr(,%rdi,1)
mov %rdi, %rdx
add $arr, %rdx
mov $1, %rax
mov %rdi, %r9
mov $1, %rdi
mov %rdx, %rsi
mov $1, %rdx
syscall
mov     %r9, %rdi
decb arr(,%rdi,1)
decb arr(,%rdi,1)
decb arr(,%rdi,1)
decb arr(,%rdi,1)
decb arr(,%rdi,1)
decb arr(,%rdi,1)
mov %rdi, %rdx
add $arr, %rdx
mov $1, %rax
mov %rdi, %r9
mov $1, %rdi
mov %rdx, %rsi
mov $1, %rdx
syscall
mov     %r9, %rdi
decb arr(,%rdi,1)
decb arr(,%rdi,1)
decb arr(,%rdi,1)
decb arr(,%rdi,1)
decb arr(,%rdi,1)
decb arr(,%rdi,1)
decb arr(,%rdi,1)
decb arr(,%rdi,1)
mov %rdi, %rdx
add $arr, %rdx
mov $1, %rax
mov %rdi, %r9
mov $1, %rdi
mov %rdx, %rsi
mov $1, %rdx
syscall
mov     %r9, %rdi
inc %rdi
inc %rdi
incb arr(,%rdi,1)
mov %rdi, %rdx
add $arr, %rdx
mov $1, %rax
mov %rdi, %r9
mov $1, %rdi
mov %rdx, %rsi
mov $1, %rdx
syscall
mov     %r9, %rdi
inc %rdi
incb arr(,%rdi,1)
incb arr(,%rdi,1)
mov %rdi, %rdx
add $arr, %rdx
mov $1, %rax
mov %rdi, %r9
mov $1, %rdi
mov %rdx, %rsi
mov $1, %rdx
syscall
mov     %r9, %rdi
mov $1, %rax
int $0x80
